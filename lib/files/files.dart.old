import 'dart:io';
import 'package:path_provider/path_provider.dart';

class SpellStorage {
  Future<String> get _localCachePath async {
    final directory = await getTemporaryDirectory();

    return directory.path;
  }

  Future<String> get _localDocPath async {
    final directory = await getApplicationDocumentsDirectory();

    return directory.path;
  }

  Future<File> get _localFile async {
    final path = await _localDocPath;

    return File('$path/spell.list');
  }

  Future<String?> readSpellFile({String? spellName}) async {
    try {
      final File file = await _localFile;

      final contents = await file.readAsString();

      return contents;
    } catch (e) {
      // If encountering an error, return 0
      return null;
    }
  }

  Future<File> writeSpellList(String spellJson) async {
    final File file = await _localFile;

    // Write the file
    file.deleteSync();
    return file.writeAsString(spellJson, mode: FileMode.append);
  }
}
